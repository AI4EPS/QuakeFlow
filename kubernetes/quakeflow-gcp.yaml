apiVersion: apps/v1
kind: Deployment
metadata:
  name: phasenet-api
  labels:
    app: phasenet
spec:
  # replicas: 1
  selector:
    matchLabels:
      app: phasenet
  template:
    metadata:
      labels:
        app: phasenet
    spec:
      containers:
        - name: phasenet
          image: zhuwq0/phasenet-api:1.0
          ports:
            - containerPort: 8000
          imagePullPolicy: Always
          resources:
            requests:
              cpu: "600m"
              # memory: "5G"
            limits:
              memory: "3G"
          startupProbe:
            # httpGet:
            #   path: /healthz
            #   port: 8000
            exec:
              command:
                - "curl"
                - "--fail"
                - "-o"
                - "/dev/null"
                - "http://localhost:8000/healthz"
            initialDelaySeconds: 30
            periodSeconds: 30
            failureThreshold: 3
          readinessProbe:
            # httpGet:
            #   path: /healthz
            #   port: 8000
            exec:
              command:
                - "curl"
                - "--fail"
                - "-o"
                - "/dev/null"
                - "http://localhost:8000/healthz"
            initialDelaySeconds: 60
            periodSeconds: 30
            failureThreshold: 5
          livenessProbe:
            # httpGet:
            #   path: /healthz
            #   port: 8000
            exec:
              command:
                - "curl"
                - "--fail"
                - "-o"
                - "/dev/null"
                - "http://localhost:8000/healthz"
            initialDelaySeconds: 60
            periodSeconds: 30
            failureThreshold: 5
---
apiVersion: v1
kind: Service
metadata:
  name: phasenet-api
  annotations:
    cloud.google.com/backend-config: '{"default": "backendconfig"}'
spec:
  selector:
    app: phasenet
  ports:
    - protocol: TCP
      port: 8000
      targetPort: 8000
  type: LoadBalancer
  # type: NodePort
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: gamma-api
  labels:
    app: gamma
spec:
  # replicas: 1
  selector:
    matchLabels:
      app: gamma
  template:
    metadata:
      labels:
        app: gamma
    spec:
      containers:
        - name: gamma
          image: zhuwq0/gamma-api:1.0
          ports:
            - containerPort: 8000
          imagePullPolicy: Always
          resources:
            requests:
              cpu: "200m"
            # limits:
            #   memory: "5G"
          startupProbe:
            # httpGet:
            #   path: /healthz
            #   port: 8001
            exec:
              command:
                - "curl"
                - "--fail"
                - "-o"
                - "/dev/null"
                - "http://localhost:8001/healthz"
            initialDelaySeconds: 30
            periodSeconds: 30
            failureThreshold: 3
          readinessProbe:
            # httpGet:
            #   path: /healthz
            #   port: 8001
            exec:
              command:
                - "curl"
                - "--fail"
                - "-o"
                - "/dev/null"
                - "http://localhost:8001/healthz"
            initialDelaySeconds: 60
            periodSeconds: 30
            failureThreshold: 5
          livenessProbe:
            # httpGet:
            #   path: /healthz
            #   port: 8001
            exec:
              command:
                - "curl"
                - "--fail"
                - "-o"
                - "/dev/null"
                - "http://localhost:8001/healthz"
            initialDelaySeconds: 60
            periodSeconds: 30
            failureThreshold: 5
---
apiVersion: v1
kind: Service
metadata:
  name: gamma-api
  annotations:
    cloud.google.com/backend-config: '{"default": "backendconfig"}'
spec:
  selector:
    app: gamma
  ports:
    - protocol: TCP
      port: 8001
      targetPort: 8000
  type: LoadBalancer
  # type: NodePort
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: deepdenoiser-api
  labels:
    app: deepdenoiser
spec:
  # replicas: 1
  selector:
    matchLabels:
      app: deepdenoiser
  template:
    metadata:
      labels:
        app: deepdenoiser
    spec:
      containers:
        - name: deepdenoiser
          image: zhuwq0/deepdenoiser-api:1.0
          ports:
            - containerPort: 8000
          imagePullPolicy: Always
          resources:
            requests:
              cpu: "200m"
          startupProbe:
            httpGet:
              path: /healthz
              port: 8002
            initialDelaySeconds: 30
            periodSeconds: 30
            failureThreshold: 10
          readinessProbe:
            httpGet:
              path: /healthz
              port: 8002
            initialDelaySeconds: 10
            periodSeconds: 10
            failureThreshold: 30
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8002
            initialDelaySeconds: 600
            periodSeconds: 30
---
apiVersion: v1
kind: Service
metadata:
  name: deepdenoiser-api
spec:
  selector:
    app: deepdenoiser
  ports:
    - protocol: TCP
      port: 8002
      targetPort: 8000
  type: LoadBalancer
  # type: NodePort
# ---
# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   name: quakeflow-spark
#   labels:
#     app: spark
# spec:
#   replicas: 1
#   selector:
#     matchLabels:
#       app: spark
#   template:
#     metadata:
#       labels:
#         app: spark
#     spec:
#       containers:
#         - name: spark
#           image: zhuwq0/quakeflow-spark:1.0
#           imagePullPolicy: Always
#           resources:
#             requests:
#               cpu: "250m"
# ---
# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   name: quakeflow-waveform
#   labels:
#     app: waveform
# spec:
#   replicas: 1
#   selector:
#     matchLabels:
#       app: waveform
#   template:
#     metadata:
#       labels:
#         app: waveform
#     spec:
#       containers:
#         - name: waveform
#           image: zhuwq0/quakeflow-waveform:1.0
#           imagePullPolicy: Always
#           resources:
#             requests:
#               cpu: "250m"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: quakeflow-ui
  labels:
    app: quakeflow-ui
spec:
  replicas: 1
  selector:
    matchLabels:
      app: quakeflow-ui
  template:
    metadata:
      labels:
        app: quakeflow-ui
    spec:
      containers:
        - name: quakeflow-ui
          image: zhuwq0/quakeflow-ui:1.0
          ports:
            - containerPort: 8005
          imagePullPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  name: quakeflow-ui
spec:
  selector:
    app: quakeflow-ui
  ports:
    - protocol: TCP
      port: 8005
      targetPort: 8005
  type: LoadBalancer
  # type: NodePort
---

